{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoItemsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.refreshStatus = +new Date();\n    this.API_URL = 'http://localhost:5203/api/todo-items';\n  }\n  // static todoItems = [\n  //   {\n  //     title: \"Walk with the dog\",\n  //     description: \"Take the dog on a long walk because it needs to get rid of all the fatness\",\n  //     createdAt: \"2024-12-23\",\n  //     completedAt: null,\n  //     estimatedAt: \"2024-12-20\"\n  //   },\n  //   {\n  //     title: \"Drink water\",\n  //     description: \"Get hydrated\",\n  //     createdAt: \"2024-12-21\",\n  //     completedAt: \"2024-12-20\",\n  //     estimatedAt: \"2024-12-20\"\n  //   },\n  //   {\n  //     title: \"Finish project\",\n  //     description: \"Zella project\",\n  //     createdAt: \"2024-12-22\",\n  //     completedAt: \"2024-12-20\",\n  //     estimatedAt: \"2024-12-20\"\n  //   }\n  // ];\n  // 'http://localhost:5203/api/todo-items'\n  getTodoItems() {\n    return this.httpClient.get(this.API_URL);\n  }\n  updateTodoItem(item) {\n    return this.httpClient.put(`${this.API_URL}/${item.id}`, item);\n  }\n  deleteTodoItem(item) {\n    return this.httpClient.delete(`${this.API_URL}/${item.id}`);\n  }\n  createTodoItem(item) {\n    return this.httpClient.post(`${this.API_URL}`, item);\n  }\n  refreshPage() {\n    this.oldRefresh = this.refreshStatus;\n    this.refreshStatus = +new Date();\n  }\n  // getTodoItems() {\n  //   let items = this.ascendingDateSort(TodoItemsService.todoItems)\n  //   return items;\n  // }\n  ascendingDateSort(items) {\n    let sorted = items.sort((a, b) => {\n      return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n    });\n    return sorted;\n  }\n  descendingDateSort(items) {\n    let sorted = items.sort((a, b) => {\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n    });\n    return sorted;\n  }\n  static #_ = this.ɵfac = function TodoItemsService_Factory(t) {\n    return new (t || TodoItemsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoItemsService,\n    factory: TodoItemsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TodoItemsService","constructor","httpClient","refreshStatus","Date","API_URL","getTodoItems","get","updateTodoItem","item","put","id","deleteTodoItem","delete","createTodoItem","post","refreshPage","oldRefresh","ascendingDateSort","items","sorted","sort","a","b","createdAt","getTime","descendingDateSort","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/programmer/Desktop/Projects/Angular/ZellaProject/todo-list/src/app/services/todo-items.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoItemsService {\n  constructor(private httpClient: HttpClient) { }\n  refreshStatus = +new Date();\n  oldRefresh: number;\n\n  API_URL: string = 'http://localhost:5203/api/todo-items';\n\n  // static todoItems = [\n  //   {\n  //     title: \"Walk with the dog\",\n  //     description: \"Take the dog on a long walk because it needs to get rid of all the fatness\",\n  //     createdAt: \"2024-12-23\",\n  //     completedAt: null,\n  //     estimatedAt: \"2024-12-20\"\n  //   },\n  //   {\n  //     title: \"Drink water\",\n  //     description: \"Get hydrated\",\n  //     createdAt: \"2024-12-21\",\n  //     completedAt: \"2024-12-20\",\n  //     estimatedAt: \"2024-12-20\"\n  //   },\n  //   {\n  //     title: \"Finish project\",\n  //     description: \"Zella project\",\n  //     createdAt: \"2024-12-22\",\n  //     completedAt: \"2024-12-20\",\n  //     estimatedAt: \"2024-12-20\"\n  //   }\n  // ];\n\n  // 'http://localhost:5203/api/todo-items'\n\n  getTodoItems() {\n    return this.httpClient.get<any>(this.API_URL);\n  }\n\n  updateTodoItem(item: any) {\n    return this.httpClient.put<any>(`${this.API_URL}/${item.id}`, item);\n  }\n\n  deleteTodoItem(item: any) {\n    return this.httpClient.delete<any>(`${this.API_URL}/${item.id}`);\n  }\n\n  createTodoItem(item: any) {\n    return this.httpClient.post<any>(`${this.API_URL}`, item)\n  }\n\n  refreshPage() {\n    this.oldRefresh = this.refreshStatus;\n    this.refreshStatus = +new Date();\n  }\n\n  // getTodoItems() {\n  //   let items = this.ascendingDateSort(TodoItemsService.todoItems)\n  //   return items;\n  // }\n\n  ascendingDateSort(items: any) {\n    let sorted = items.sort((a: any, b: any) => { return (new Date(a.createdAt).getTime()) - (new Date(b.createdAt)).getTime(); })\n    return sorted;\n  }\n\n  descendingDateSort(items: any) {\n    let sorted = items.sort((a: any, b: any) => { return (new Date(b.createdAt).getTime()) - (new Date(a.createdAt)).getTime(); })\n    return sorted;\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAC9B,KAAAC,aAAa,GAAG,CAAC,IAAIC,IAAI,EAAE;IAG3B,KAAAC,OAAO,GAAW,sCAAsC;EAJV;EAM9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAM,IAAI,CAACF,OAAO,CAAC;EAC/C;EAEAG,cAAcA,CAACC,IAAS;IACtB,OAAO,IAAI,CAACP,UAAU,CAACQ,GAAG,CAAM,GAAG,IAAI,CAACL,OAAO,IAAII,IAAI,CAACE,EAAE,EAAE,EAAEF,IAAI,CAAC;EACrE;EAEAG,cAAcA,CAACH,IAAS;IACtB,OAAO,IAAI,CAACP,UAAU,CAACW,MAAM,CAAM,GAAG,IAAI,CAACR,OAAO,IAAII,IAAI,CAACE,EAAE,EAAE,CAAC;EAClE;EAEAG,cAAcA,CAACL,IAAS;IACtB,OAAO,IAAI,CAACP,UAAU,CAACa,IAAI,CAAM,GAAG,IAAI,CAACV,OAAO,EAAE,EAAEI,IAAI,CAAC;EAC3D;EAEAO,WAAWA,CAAA;IACT,IAAI,CAACC,UAAU,GAAG,IAAI,CAACd,aAAa;IACpC,IAAI,CAACA,aAAa,GAAG,CAAC,IAAIC,IAAI,EAAE;EAClC;EAEA;EACA;EACA;EACA;EAEAc,iBAAiBA,CAACC,KAAU;IAC1B,IAAIC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAAG,OAAQ,IAAInB,IAAI,CAACkB,CAAC,CAACE,SAAS,CAAC,CAACC,OAAO,EAAE,GAAK,IAAIrB,IAAI,CAACmB,CAAC,CAACC,SAAS,CAAC,CAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IAC9H,OAAOL,MAAM;EACf;EAEAM,kBAAkBA,CAACP,KAAU;IAC3B,IAAIC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAAG,OAAQ,IAAInB,IAAI,CAACmB,CAAC,CAACC,SAAS,CAAC,CAACC,OAAO,EAAE,GAAK,IAAIrB,IAAI,CAACkB,CAAC,CAACE,SAAS,CAAC,CAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IAC9H,OAAOL,MAAM;EACf;EAAC,QAAAO,CAAA,G;qBAnEU3B,gBAAgB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBhC,gBAAgB;IAAAiC,OAAA,EAAhBjC,gBAAgB,CAAAkC,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}