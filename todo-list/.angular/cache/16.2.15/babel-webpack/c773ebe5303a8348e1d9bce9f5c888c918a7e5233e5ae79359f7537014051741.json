{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TodoItemsService {\n  constructor() {}\n  static #_ = this.todoItems = [{\n    title: \"Walk with the dog\",\n    description: \"Take the dog on a long walk because it needs to get rid of all the fatness\",\n    created_at: \"20/12/2024\",\n    finished_at: null,\n    estimated_date: \"20/12/2024\"\n  }, {\n    title: \"Drink water\",\n    description: \"Get hydrated\",\n    created_at: \"20/12/2024\",\n    finished_at: \"20/12/2024\",\n    estimated_date: \"20/12/2024\"\n  }, {\n    title: \"Finish project\",\n    description: \"Zella project\",\n    created_at: \"2024-12-20\",\n    finished_at: \"2024-12-20\",\n    estimated_date: \"2024-12-20\"\n  }];\n  addNewTodo(event) {\n    let item = event;\n    TodoItemsService.todoItems.unshift(item);\n  }\n  getTodoItems() {\n    return TodoItemsService.todoItems;\n  }\n  static #_2 = this.ɵfac = function TodoItemsService_Factory(t) {\n    return new (t || TodoItemsService)();\n  };\n  static #_3 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoItemsService,\n    factory: TodoItemsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TodoItemsService","constructor","_","todoItems","title","description","created_at","finished_at","estimated_date","addNewTodo","event","item","unshift","getTodoItems","_2","_3","factory","ɵfac","providedIn"],"sources":["/home/programmer/Desktop/Projects/Angular/todo-list/src/app/services/todo-items.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoItemsService {\n  constructor() { }\n\n  static todoItems = [\n    {\n      title: \"Walk with the dog\",\n      description: \"Take the dog on a long walk because it needs to get rid of all the fatness\",\n      created_at: \"20/12/2024\",\n      finished_at: null,\n      estimated_date: \"20/12/2024\"\n    },\n    {\n      title: \"Drink water\",\n      description: \"Get hydrated\",\n      created_at: \"20/12/2024\",\n      finished_at: \"20/12/2024\",\n      estimated_date: \"20/12/2024\"\n    },\n    {\n      title: \"Finish project\",\n      description: \"Zella project\",\n      created_at: \"2024-12-20\",\n      finished_at: \"2024-12-20\",\n      estimated_date: \"2024-12-20\"\n    }\n  ];\n\n  addNewTodo(event: any) {\n    let item = event;\n    TodoItemsService.todoItems.unshift(item);\n  }\n\n  getTodoItems() {\n    return TodoItemsService.todoItems;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAA,GAAgB;EAAC,QAAAC,CAAA,GAEV,KAAAC,SAAS,GAAG,CACjB;IACEC,KAAK,EAAE,mBAAmB;IAC1BC,WAAW,EAAE,4EAA4E;IACzFC,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,IAAI;IACjBC,cAAc,EAAE;GACjB,EACD;IACEJ,KAAK,EAAE,aAAa;IACpBC,WAAW,EAAE,cAAc;IAC3BC,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,YAAY;IACzBC,cAAc,EAAE;GACjB,EACD;IACEJ,KAAK,EAAE,gBAAgB;IACvBC,WAAW,EAAE,eAAe;IAC5BC,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,YAAY;IACzBC,cAAc,EAAE;GACjB,CACF;EAEDC,UAAUA,CAACC,KAAU;IACnB,IAAIC,IAAI,GAAGD,KAAK;IAChBV,gBAAgB,CAACG,SAAS,CAACS,OAAO,CAACD,IAAI,CAAC;EAC1C;EAEAE,YAAYA,CAAA;IACV,OAAOb,gBAAgB,CAACG,SAAS;EACnC;EAAC,QAAAW,EAAA,G;qBAlCUd,gBAAgB;EAAA;EAAA,QAAAe,EAAA,G;WAAhBf,gBAAgB;IAAAgB,OAAA,EAAhBhB,gBAAgB,CAAAiB,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}