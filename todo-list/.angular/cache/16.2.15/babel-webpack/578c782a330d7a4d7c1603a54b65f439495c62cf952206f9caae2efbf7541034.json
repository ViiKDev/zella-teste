{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API_URL = 'http://localhost:5203/api/user';\n    this.userPayload = this.decodeToken();\n  }\n  signUp(userObj) {\n    return this.httpClient.post(`${this.API_URL}/register`, userObj);\n  }\n  login(loginObj) {\n    return this.httpClient.post(`${this.API_URL}/authenticate`, loginObj);\n  }\n  storeToken(tokenValue) {\n    localStorage.setItem('token', tokenValue);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLoggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  updateUserInfo(info) {\n    const userId = this.getUserIdFromToken();\n    console.log(userId);\n    return this.httpClient.put(`${this.API_URL}s/${userId}`, info);\n  }\n  decodeToken() {\n    const jwtHelper = new JwtHelperService();\n    const token = this.getToken();\n    return jwtHelper.decodeToken(token);\n  }\n  getRoleFromToken() {\n    if (this.userPayload) return this.userPayload.role;\n  }\n  getUserIdFromToken() {\n    if (this.userPayload) return this.userPayload.userId;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["JwtHelperService","AuthService","constructor","httpClient","API_URL","userPayload","decodeToken","signUp","userObj","post","login","loginObj","storeToken","tokenValue","localStorage","setItem","getToken","getItem","isLoggedIn","updateUserInfo","info","userId","getUserIdFromToken","console","log","put","jwtHelper","token","getRoleFromToken","role","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/programmer/Desktop/Projects/Angular/ZellaProject/todo-list/src/app/services/auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private API_URL: string = 'http://localhost:5203/api/user';\n  private userPayload: any;\n\n  constructor(private httpClient: HttpClient) {\n    this.userPayload = this.decodeToken();\n  }\n\n  signUp(userObj: any) {\n    return this.httpClient.post<any>(`${this.API_URL}/register`, userObj);\n  }\n  login(loginObj: any) {\n    return this.httpClient.post<any>(`${this.API_URL}/authenticate`, loginObj);\n  }\n  storeToken(tokenValue: string) {\n    localStorage.setItem('token', tokenValue)\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('token');\n  }\n  updateUserInfo(info: any) {\n    const userId = this.getUserIdFromToken();\n    console.log(userId)\n    return this.httpClient.put<any>(`${this.API_URL}s/${userId}`, info);\n  }\n  decodeToken() {\n    const jwtHelper = new JwtHelperService();\n    const token = this.getToken()!;\n    return jwtHelper.decodeToken(token);\n  }\n  getRoleFromToken() {\n    if (this.userPayload) return this.userPayload.role\n\n  }\n  getUserIdFromToken() {\n    if (this.userPayload) return this.userPayload.userId\n  }\n}\n"],"mappings":"AAEA,SAASA,gBAAgB,QAAQ,oBAAoB;;;AAKrD,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHtB,KAAAC,OAAO,GAAW,gCAAgC;IAIxD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,WAAW,EAAE;EACvC;EAEAC,MAAMA,CAACC,OAAY;IACjB,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,OAAO,WAAW,EAAEI,OAAO,CAAC;EACvE;EACAE,KAAKA,CAACC,QAAa;IACjB,OAAO,IAAI,CAACR,UAAU,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,OAAO,eAAe,EAAEO,QAAQ,CAAC;EAC5E;EACAC,UAAUA,CAACC,UAAkB;IAC3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,UAAU,CAAC;EAC3C;EACAG,QAAQA,CAAA;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EACAC,UAAUA,CAAA;IACR,OAAO,CAAC,CAACJ,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACxC;EACAE,cAAcA,CAACC,IAAS;IACtB,MAAMC,MAAM,GAAG,IAAI,CAACC,kBAAkB,EAAE;IACxCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnB,OAAO,IAAI,CAAClB,UAAU,CAACsB,GAAG,CAAM,GAAG,IAAI,CAACrB,OAAO,KAAKiB,MAAM,EAAE,EAAED,IAAI,CAAC;EACrE;EACAd,WAAWA,CAAA;IACT,MAAMoB,SAAS,GAAG,IAAI1B,gBAAgB,EAAE;IACxC,MAAM2B,KAAK,GAAG,IAAI,CAACX,QAAQ,EAAG;IAC9B,OAAOU,SAAS,CAACpB,WAAW,CAACqB,KAAK,CAAC;EACrC;EACAC,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACvB,WAAW,EAAE,OAAO,IAAI,CAACA,WAAW,CAACwB,IAAI;EAEpD;EACAP,kBAAkBA,CAAA;IAChB,IAAI,IAAI,CAACjB,WAAW,EAAE,OAAO,IAAI,CAACA,WAAW,CAACgB,MAAM;EACtD;EAAC,QAAAS,CAAA,G;qBAvCU7B,WAAW,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlC,WAAW;IAAAmC,OAAA,EAAXnC,WAAW,CAAAoC,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}