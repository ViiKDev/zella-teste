{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoItemsService {\n  constructor(httpClient) {}\n  static #_ = this.todoItems = [{\n    title: \"Walk with the dog\",\n    description: \"Take the dog on a long walk because it needs to get rid of all the fatness\",\n    created_at: \"2024-12-23\",\n    finished_at: null,\n    estimated_date: \"2024-12-20\"\n  }, {\n    title: \"Drink water\",\n    description: \"Get hydrated\",\n    created_at: \"2024-12-21\",\n    finished_at: \"2024-12-20\",\n    estimated_date: \"2024-12-20\"\n  }, {\n    title: \"Finish project\",\n    description: \"Zella project\",\n    created_at: \"2024-12-22\",\n    finished_at: \"2024-12-20\",\n    estimated_date: \"2024-12-20\"\n  }]; // 'http://localhost:5203/api/todo-items'\n  addNewTodo(event) {\n    let item = event;\n    TodoItemsService.todoItems.unshift(item);\n  }\n  getTodoItems() {\n    let items = this.ascendingDateSort(TodoItemsService.todoItems);\n    return items;\n  }\n  ascendingDateSort(items) {\n    let sorted = items.sort((a, b) => {\n      return new Date(a.created_at).getTime() - new Date(b.created_at).getTime();\n    });\n    return sorted;\n  }\n  descendingDateSort(items) {\n    let sorted = items.sort((a, b) => {\n      return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();\n    });\n    return sorted;\n  }\n  static #_2 = this.ɵfac = function TodoItemsService_Factory(t) {\n    return new (t || TodoItemsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_3 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoItemsService,\n    factory: TodoItemsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TodoItemsService","constructor","httpClient","_","todoItems","title","description","created_at","finished_at","estimated_date","addNewTodo","event","item","unshift","getTodoItems","items","ascendingDateSort","sorted","sort","a","b","Date","getTime","descendingDateSort","_2","i0","ɵɵinject","i1","HttpClient","_3","factory","ɵfac","providedIn"],"sources":["/home/programmer/Desktop/Projects/Angular/ZellaProject/todo-list/src/app/services/todo-items.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoItemsService {\n  constructor(httpClient: HttpClient) { }\n\n  static todoItems = [\n    {\n      title: \"Walk with the dog\",\n      description: \"Take the dog on a long walk because it needs to get rid of all the fatness\",\n      created_at: \"2024-12-23\",\n      finished_at: null,\n      estimated_date: \"2024-12-20\"\n    },\n    {\n      title: \"Drink water\",\n      description: \"Get hydrated\",\n      created_at: \"2024-12-21\",\n      finished_at: \"2024-12-20\",\n      estimated_date: \"2024-12-20\"\n    },\n    {\n      title: \"Finish project\",\n      description: \"Zella project\",\n      created_at: \"2024-12-22\",\n      finished_at: \"2024-12-20\",\n      estimated_date: \"2024-12-20\"\n    }\n  ];\n\n  // 'http://localhost:5203/api/todo-items'\n\n  addNewTodo(event: any) {\n    let item = event;\n    TodoItemsService.todoItems.unshift(item);\n  }\n\n  getTodoItems() {\n    let items = this.ascendingDateSort(TodoItemsService.todoItems)\n    return items;\n  }\n\n  ascendingDateSort(items: any) {\n    let sorted = items.sort((a: any, b: any) => { return (new Date(a.created_at).getTime()) - (new Date(b.created_at)).getTime(); })\n    return sorted;\n  }\n\n  descendingDateSort(items: any) {\n    let sorted = items.sort((a: any, b: any) => { return (new Date(b.created_at).getTime()) - (new Date(a.created_at)).getTime(); })\n    return sorted;\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAYC,UAAsB,GAAI;EAAC,QAAAC,CAAA,GAEhC,KAAAC,SAAS,GAAG,CACjB;IACEC,KAAK,EAAE,mBAAmB;IAC1BC,WAAW,EAAE,4EAA4E;IACzFC,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,IAAI;IACjBC,cAAc,EAAE;GACjB,EACD;IACEJ,KAAK,EAAE,aAAa;IACpBC,WAAW,EAAE,cAAc;IAC3BC,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,YAAY;IACzBC,cAAc,EAAE;GACjB,EACD;IACEJ,KAAK,EAAE,gBAAgB;IACvBC,WAAW,EAAE,eAAe;IAC5BC,UAAU,EAAE,YAAY;IACxBC,WAAW,EAAE,YAAY;IACzBC,cAAc,EAAE;GACjB,CACF,EAED;EAEAC,UAAUA,CAACC,KAAU;IACnB,IAAIC,IAAI,GAAGD,KAAK;IAChBX,gBAAgB,CAACI,SAAS,CAACS,OAAO,CAACD,IAAI,CAAC;EAC1C;EAEAE,YAAYA,CAAA;IACV,IAAIC,KAAK,GAAG,IAAI,CAACC,iBAAiB,CAAChB,gBAAgB,CAACI,SAAS,CAAC;IAC9D,OAAOW,KAAK;EACd;EAEAC,iBAAiBA,CAACD,KAAU;IAC1B,IAAIE,MAAM,GAAGF,KAAK,CAACG,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAAG,OAAQ,IAAIC,IAAI,CAACF,CAAC,CAACZ,UAAU,CAAC,CAACe,OAAO,EAAE,GAAK,IAAID,IAAI,CAACD,CAAC,CAACb,UAAU,CAAC,CAAEe,OAAO,EAAE;IAAE,CAAC,CAAC;IAChI,OAAOL,MAAM;EACf;EAEAM,kBAAkBA,CAACR,KAAU;IAC3B,IAAIE,MAAM,GAAGF,KAAK,CAACG,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAAG,OAAQ,IAAIC,IAAI,CAACD,CAAC,CAACb,UAAU,CAAC,CAACe,OAAO,EAAE,GAAK,IAAID,IAAI,CAACF,CAAC,CAACZ,UAAU,CAAC,CAAEe,OAAO,EAAE;IAAE,CAAC,CAAC;IAChI,OAAOL,MAAM;EACf;EAAC,QAAAO,EAAA,G;qBA/CUxB,gBAAgB,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhB7B,gBAAgB;IAAA8B,OAAA,EAAhB9B,gBAAgB,CAAA+B,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}