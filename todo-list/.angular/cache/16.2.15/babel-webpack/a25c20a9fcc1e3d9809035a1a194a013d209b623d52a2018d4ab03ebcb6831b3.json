{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoItemsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  // static todoItems = [\n  //   {\n  //     title: \"Walk with the dog\",\n  //     description: \"Take the dog on a long walk because it needs to get rid of all the fatness\",\n  //     created_at: \"2024-12-23\",\n  //     finished_at: null,\n  //     estimated_date: \"2024-12-20\"\n  //   },\n  //   {\n  //     title: \"Drink water\",\n  //     description: \"Get hydrated\",\n  //     created_at: \"2024-12-21\",\n  //     finished_at: \"2024-12-20\",\n  //     estimated_date: \"2024-12-20\"\n  //   },\n  //   {\n  //     title: \"Finish project\",\n  //     description: \"Zella project\",\n  //     created_at: \"2024-12-22\",\n  //     finished_at: \"2024-12-20\",\n  //     estimated_date: \"2024-12-20\"\n  //   }\n  // ];\n  // 'http://localhost:5203/api/todo-items'\n  addNewTodo(event) {\n    let item = event;\n    TodoItemsService.todoItems.unshift(item);\n  }\n  getTodoItems() {\n    let items = this.ascendingDateSort(TodoItemsService.todoItems);\n    return items;\n  }\n  ascendingDateSort(items) {\n    let sorted = items.sort((a, b) => {\n      return new Date(a.created_at).getTime() - new Date(b.created_at).getTime();\n    });\n    return sorted;\n  }\n  descendingDateSort(items) {\n    let sorted = items.sort((a, b) => {\n      return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();\n    });\n    return sorted;\n  }\n  static #_ = this.ɵfac = function TodoItemsService_Factory(t) {\n    return new (t || TodoItemsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoItemsService,\n    factory: TodoItemsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TodoItemsService","constructor","httpClient","addNewTodo","event","item","todoItems","unshift","getTodoItems","items","ascendingDateSort","sorted","sort","a","b","Date","created_at","getTime","descendingDateSort","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/programmer/Desktop/Projects/Angular/ZellaProject/todo-list/src/app/services/todo-items.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoItemsService {\n  constructor(private httpClient: HttpClient) { }\n\n  // static todoItems = [\n  //   {\n  //     title: \"Walk with the dog\",\n  //     description: \"Take the dog on a long walk because it needs to get rid of all the fatness\",\n  //     created_at: \"2024-12-23\",\n  //     finished_at: null,\n  //     estimated_date: \"2024-12-20\"\n  //   },\n  //   {\n  //     title: \"Drink water\",\n  //     description: \"Get hydrated\",\n  //     created_at: \"2024-12-21\",\n  //     finished_at: \"2024-12-20\",\n  //     estimated_date: \"2024-12-20\"\n  //   },\n  //   {\n  //     title: \"Finish project\",\n  //     description: \"Zella project\",\n  //     created_at: \"2024-12-22\",\n  //     finished_at: \"2024-12-20\",\n  //     estimated_date: \"2024-12-20\"\n  //   }\n  // ];\n\n  // 'http://localhost:5203/api/todo-items'\n\n  addNewTodo(event: any) {\n    let item = event;\n    TodoItemsService.todoItems.unshift(item);\n  }\n\n  getTodoItems() {\n    let items = this.ascendingDateSort(TodoItemsService.todoItems)\n    return items;\n  }\n\n  ascendingDateSort(items: any) {\n    let sorted = items.sort((a: any, b: any) => { return (new Date(a.created_at).getTime()) - (new Date(b.created_at)).getTime(); })\n    return sorted;\n  }\n\n  descendingDateSort(items: any) {\n    let sorted = items.sort((a: any, b: any) => { return (new Date(b.created_at).getTime()) - (new Date(a.created_at)).getTime(); })\n    return sorted;\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEAC,UAAUA,CAACC,KAAU;IACnB,IAAIC,IAAI,GAAGD,KAAK;IAChBJ,gBAAgB,CAACM,SAAS,CAACC,OAAO,CAACF,IAAI,CAAC;EAC1C;EAEAG,YAAYA,CAAA;IACV,IAAIC,KAAK,GAAG,IAAI,CAACC,iBAAiB,CAACV,gBAAgB,CAACM,SAAS,CAAC;IAC9D,OAAOG,KAAK;EACd;EAEAC,iBAAiBA,CAACD,KAAU;IAC1B,IAAIE,MAAM,GAAGF,KAAK,CAACG,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAAG,OAAQ,IAAIC,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,CAACC,OAAO,EAAE,GAAK,IAAIF,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IAChI,OAAON,MAAM;EACf;EAEAO,kBAAkBA,CAACT,KAAU;IAC3B,IAAIE,MAAM,GAAGF,KAAK,CAACG,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAAG,OAAQ,IAAIC,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAACC,OAAO,EAAE,GAAK,IAAIF,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,CAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;IAChI,OAAON,MAAM;EACf;EAAC,QAAAQ,CAAA,G;qBA/CUnB,gBAAgB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBxB,gBAAgB;IAAAyB,OAAA,EAAhBzB,gBAAgB,CAAA0B,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}