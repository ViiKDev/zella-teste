{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class TodoItemsService {\n  constructor(httpClient, authService) {\n    this.httpClient = httpClient;\n    this.authService = authService;\n    this.API_URL = 'http://localhost:5203/api/todo-items';\n  }\n  static #_ = this.refreshStatus = new EventEmitter();\n  static #_2 = this.filterStatus = null;\n  getTodoItems(userId) {\n    return this.httpClient.get(`${this.API_URL}-user/${userId}`);\n  }\n  updateTodoItem(item) {\n    this.httpClient.put(`${this.API_URL}/${item.id}`, item).subscribe({\n      next: () => {\n        TodoItemsService.refreshStatus.emit('update');\n      },\n      error: err => {\n        console.log(\"Error on update:\", err);\n      }\n    });\n  }\n  deleteTodoItem(item) {\n    this.httpClient.delete(`${this.API_URL}/${item.id}`).subscribe({\n      next: () => {\n        TodoItemsService.refreshStatus.emit('delete');\n      },\n      error: err => {\n        console.log(\"Error on delete:\", err);\n      }\n    });\n  }\n  createTodoItem(item) {\n    const userId = this.authService.getUserIdFromToken();\n    this.httpClient.post(`${this.API_URL}/${userId}`, item).subscribe({\n      next: () => {\n        TodoItemsService.refreshStatus.emit('create');\n      },\n      error: err => {\n        console.log(\"Error on create:\", err);\n      }\n    });\n  }\n  sortItemsBy(items, obj) {\n    let sorted = items;\n    obj.reverse().forEach(({\n      key,\n      order\n    }) => {\n      sorted = items.sort((a, b) => {\n        return a[key].toString().localeCompare(b[key].toString()) * (order ? 1 : -1);\n      });\n    });\n    return sorted;\n  }\n  // sortItemsBy(items: any, ascending: boolean = true, field: string[] = ['createdAt']) {\n  //   let sorted = items;\n  //   field.reverse().forEach(f => {\n  //     sorted = items.sort((a: any, b: any) => { return a[f].toString().localeCompare(b[f].toString()) * (ascending ? 1 : -1) });\n  //   })\n  //   return sorted;\n  // }\n  ascendingDateSort(items) {\n    let sorted = items.sort((a, b) => {\n      return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n    });\n    return sorted;\n  }\n  descendingDateSort(items) {\n    let sorted = items.sort((a, b) => {\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n    });\n    return sorted;\n  }\n  static #_3 = this.ɵfac = function TodoItemsService_Factory(t) {\n    return new (t || TodoItemsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_4 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoItemsService,\n    factory: TodoItemsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","TodoItemsService","constructor","httpClient","authService","API_URL","_","refreshStatus","_2","filterStatus","getTodoItems","userId","get","updateTodoItem","item","put","id","subscribe","next","emit","error","err","console","log","deleteTodoItem","delete","createTodoItem","getUserIdFromToken","post","sortItemsBy","items","obj","sorted","reverse","forEach","key","order","sort","a","b","toString","localeCompare","ascendingDateSort","Date","createdAt","getTime","descendingDateSort","_3","i0","ɵɵinject","i1","HttpClient","i2","AuthService","_4","factory","ɵfac","providedIn"],"sources":["/home/programmer/Desktop/Projects/Angular/ZellaProject/todo-list/src/app/services/todo-items.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoItemsService {\n  constructor(private httpClient: HttpClient, private authService: AuthService) { }\n\n  static refreshStatus = new EventEmitter();\n  static filterStatus = null;\n\n  private API_URL: string = 'http://localhost:5203/api/todo-items';\n  getTodoItems(userId: string) {\n    return this.httpClient.get<any>(`${this.API_URL}-user/${userId}`);\n  }\n\n  updateTodoItem(item: any) {\n    this.httpClient.put<any>(`${this.API_URL}/${item.id}`, item).subscribe(\n      {\n        next: () => {\n          TodoItemsService.refreshStatus.emit('update');\n        },\n        error: (err) => {\n          console.log(\"Error on update:\", err);\n        }\n      }\n    );\n  }\n\n  deleteTodoItem(item: any) {\n    this.httpClient.delete<any>(`${this.API_URL}/${item.id}`).subscribe(\n      {\n        next: () => {\n          TodoItemsService.refreshStatus.emit('delete');\n        },\n        error: (err) => {\n          console.log(\"Error on delete:\", err);\n        }\n      }\n    );\n  }\n\n  createTodoItem(item: any) {\n    const userId = this.authService.getUserIdFromToken();\n    this.httpClient.post<any>(`${this.API_URL}/${userId}`, item).subscribe(\n      {\n        next: () => {\n          TodoItemsService.refreshStatus.emit('create');\n        },\n        error: (err) => {\n          console.log(\"Error on create:\", err);\n        }\n      }\n    );\n  }\n\n  sortItemsBy(items: any, obj: { key: string, order: boolean }[]) {\n    let sorted = items;\n    obj.reverse().forEach(({ key, order }) => {\n      sorted = items.sort((a: any, b: any) => { return a[key].toString().localeCompare(b[key].toString()) * (order ? 1 : -1) });\n    })\n    return sorted;\n  }\n\n  // sortItemsBy(items: any, ascending: boolean = true, field: string[] = ['createdAt']) {\n  //   let sorted = items;\n  //   field.reverse().forEach(f => {\n  //     sorted = items.sort((a: any, b: any) => { return a[f].toString().localeCompare(b[f].toString()) * (ascending ? 1 : -1) });\n  //   })\n  //   return sorted;\n  // }\n\n  ascendingDateSort(items: any) {\n    let sorted = items.sort((a: any, b: any) => { return (new Date(a.createdAt).getTime()) - (new Date(b.createdAt)).getTime(); })\n    return sorted;\n  }\n\n  descendingDateSort(items: any) {\n    let sorted = items.sort((a: any, b: any) => { return (new Date(b.createdAt).getTime()) - (new Date(a.createdAt)).getTime(); })\n    return sorted;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}